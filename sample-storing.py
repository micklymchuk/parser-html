#!/usr/bin/env python3
"""
–û–±—Ä–æ–±–∫–∞ HTML —Ñ–∞–π–ª—ñ–≤ - –ø—Ä–æ—Å—Ç–æ –∑–º—ñ–Ω—ñ—Ç—å —à–ª—è—Ö–∏ —ñ –∑–∞–ø—É—Å—Ç—ñ—Ç—å
"""

from html_rag import create_pipeline
import glob
import os

# ========== –ó–ú–Ü–ù–Ü–¢–¨ –¶–Ü –®–õ–Ø–•–ò ==========
HTML_FOLDER = "./sample-sites"        # –ü–∞–ø–∫–∞ –∑ HTML —Ñ–∞–π–ª–∞–º–∏
DB_PATH = "./database"           # –®–ª—è—Ö –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
# ====================================

def main():
    print("üöÄ –ü–æ—á–∏–Ω–∞—î–º–æ –æ–±—Ä–æ–±–∫—É HTML —Ñ–∞–π–ª—ñ–≤...")

    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–π–ø–ª–∞–π–Ω
    pipeline = create_pipeline(db_path=DB_PATH)

    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ HTML —Ñ–∞–π–ª–∏
    html_files = glob.glob(os.path.join(HTML_FOLDER, "*.html"))
    html_files += glob.glob(os.path.join(HTML_FOLDER, "*.htm"))

    print(f"üìÅ –ó–Ω–∞–π–¥–µ–Ω–æ {len(html_files)} —Ñ–∞–π–ª—ñ–≤")

    # –û–±—Ä–æ–±–ª—è—î–º–æ –∫–æ–∂–µ–Ω —Ñ–∞–π–ª
    for i, file_path in enumerate(html_files, 1):
        print(f"[{i}/{len(html_files)}] –û–±—Ä–æ–±–ª—è—é: {os.path.basename(file_path)}")

        try:
            # –ß–∏—Ç–∞—î–º–æ —Ñ–∞–π–ª
            with open(file_path, 'r', encoding='utf-8') as f:
                html_content = f.read()

            # –î–æ–¥–∞—î–º–æ –¥–æ –±–∞–∑–∏
            result = pipeline.process_html(
                html_content,
                url=file_path
            )
            if result.get('success'):
                print(f"‚úÖ –ì–æ—Ç–æ–≤–æ")
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {result.get('error', '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞')}")

        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

    print(f"üéâ –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()